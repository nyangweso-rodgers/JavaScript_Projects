# JavaScript Learning Roadmap
1. Execution Context
1.1 Global execution Context
1.2 Function execution context 
1.3 Execution context stack
1.4 Execution context phases: Creation and execution phase
1.5 Creation and Hoisting
1.6 Scope, scope chain and lexical environment

2. Operators
2.1 Comparison Operators: loose equality and strict equality
2.2 Logical Operators: Logican add (&&), Logical or (||), Logical not (!)
2.3 Learn short circuit evaluation
2.4 String Operators: how to concatenate a string 
2.5 Conditional (ternary) Operator

3. Control Flow and Error Handling
3.1 Block statement
3.2 Conditional statement
3.3 Falsy value
3.4 Switch statement
3.5 Exception Handling statement
3.6 Exception types, throw statement, try and catch + finally

4. Objects and Functions: part 1
4.1 Function statement and Function expression
4.2 What is an IIFE and practical uses. Why the code inside one is considered "safe code"
4.3 Nested functions and closures
4.4 Learn practical closures

5. Objects and Functions: part 2
5.1 Asynchronous operations with callback functions 
5.2 Difference between call(), apply(), and bind()
5.3 Learn how primitive values are assigned by value and reference
5.4 Learn object literals, properties and methods, optional chaining 

6. Arrays
6.1 Learn array declaration, how to get a value by index, how to get array's length
6.7 Learn array helper methods: forEach, map, filter, find, every, some, reduce, sort, concat, findIndex, reverse, includes, pop, shift, unshift

7. ES6: part 1
7.1 Const and Let 
7.2 Blocked scoped variables and functions with let 
7.3 Arrow functions. Learn lexical this inside arrow functions
7.4 How to set default parameter values in a function 
7.5 Learn extended parameter handling: Rest parameter and Spread Operator

8. ES6: part 2
8.1 Template literals: string interpolation
8.2 Destructring assignment: Object and Array matching with default values 
8.3 Enhanced object properties: property shorthand , computed property names, method properties
8.4 Async flow control: Promises and async/await 
8.5 Class: definition, inheritence, base class access, getter/setter , static members

9. Inheritence and the Prototype Chain
9.1 How does the prototype property works 
9.2 How to use the prototype property
9.3 How to inherit methods and properties
9.4 Different ways to create objects and the resulting prototype chain 

10. JavaScript Modules 
10.1 How to export and import modules 
10.2 Difference between default and names exports
10.3 How to rename imports and exports 
10.4 How to import and export classes 
10.5 Dynamic module loading 
10.6 Top level await 